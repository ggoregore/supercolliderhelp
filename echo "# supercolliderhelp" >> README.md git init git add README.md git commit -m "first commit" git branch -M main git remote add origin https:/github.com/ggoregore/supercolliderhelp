(
s.boot;

Bus.new(\audio, 16); //reverb
Bus.new(\audio, 18); //delay
Bus.new(\audio, 20, 4); //LFOs

SynthDef.new(\verb, {
	arg input = 16, out = 0, time = 0.6, mix = 0.5;
	var snd;

	snd = In.ar(16, 2);

	snd = LeakDC.ar(MiVerb.ar(snd, time, VarLag.kr(mix, 1, 0, 1)));

	Out.ar(out, snd);
}).add;

SynthDef.new(\delay, {
	arg input = 18, out = 0, delay_time = 0.25, delay_decay = 5;
	var snd;

	snd = In.ar(18, 2);

	snd = CombC.ar(snd, 2, delay_time, delay_decay);

	Out.ar(out, snd);
}).add;

SynthDef.new(\lfos, {
	arg out = 20, freq = 1, shape = 0.5, slope = 0.5, smooth = 0.5, shift = 0.2, output_mode = 2;
	var lfos;

	lfos = MiTides.ar(freq, shape, slope, smooth, shift, output_mode: output_mode);

	Out.ar(out, lfos);
}).add;


SynthDef.new(\Georgia2, {
	arg struct = 0.25, bright = 0.5, poly = 1, damp = 0.7, pos = 0.25, model = 0,
	dur = 1, mul = 0.5, add = 0, midinote = 60, amp = 0.3, output = 0;

	var snd;

	Line.ar(0, 0, dur * 4, doneAction: 2);

	snd = MiRings.ar(
		pit: midinote,
		struct: struct,
		bright: bright,
		damp: damp,
		pos: pos,
		model: model,
		poly: poly
	) * amp;

	snd = MiMu.ar(snd, 1.5);

	snd = MiVerb.ar(snd, 0.9, 0.9, 0.9);

	Out.ar(output, snd);
}).add;

SynthDef.new(\Georgia3, {
	arg out = 0, freq = 444, amp = 1.0, fmult = 1, fres = 0.5, pan = 0.0;
	var env, snd;

	env = EnvGen.ar(Env.perc(0.01, 1), doneAction: 2);

	snd = SinOsc.ar(freq);
	snd = RLPF.ar(snd, env.range(5, freq * fmult), fres);
	snd = snd * env;
	snd = snd * amp;

	Out.ar(out, Pan2.ar(snd, pan));
}).add;


SynthDef.new(\Georgia4, {
	arg out = 0, freq = 220, amp = 0.1, fmult = 1.5, fres = 0.6, decay = 0.5, vdepth = 0.02, vspeed = 2, pan = 0.0, lfoin = 20;
	var env, snd, lfo;

	env = EnvGen.ar(Env.perc(0.01, decay), doneAction: 2);
	lfo = InFeedback.ar(lfoin, 1);

	snd = Saw.ar(freq) * Saw.ar(freq * 1.5) * lfo; //modulating the amplitude here
	snd = RLPF.ar(snd, env.range(10, freq * fmult), fres);
	snd = snd * env;

	Out.ar(out, Pan2.ar(snd, pan));
}).add;


Pbindef(\Georgia4Bind,
	\instrument, \Georgia4,
	\octave, Pwhite(3, 6),
	\degree, Prand([0, 2, 5, \rest, 7, 10], inf),
	\amp, 0.6,
	\dur, 0.25,
	\fmult, 1,
	\scale, Scale.major(Tuning.just),
	\delta, 1,
	\decay, 1.3,
	\att, 0.1,
	\out, 16, //16 to make it go out thru the reverb
	\lfoin, Pseq([20, 21, 22, 23], inf) //sequencing the outputs

);

Pbindef(\Georgia3Bind,
	\instrument, \Georgia3,
	\octave, 5,
	\degree, Pseq([5, 2, 4, 7, 11], inf),
	\amp, 0.3,
	\dur, 2,
	\scale, Scale.major(Tuning.just),
	\fmult, 0.5,
	\delta, 0.5,
	\decay, 1.3,
	\att, 0.1,
	\out, 16
);


Pbindef(\Georgia2Bind,
	\instrument, \Georgia2,
	\octave, Pwhite(3, 4),
	\degree, Pseq([0, 3, 4, 6, 2, 8, 11, 3, -2], inf),
	\scale, Scale.major(Tuning.just),
	\delta, 2,
	\dur, 2.5,
	\model, 2,
	\amp, 0.8,
	\bright, 0.5,
	\struct, Pwhite(0.1, 0.9),
	\damp, Pwhite(0.1, 0.9),
	\pos, Pwhite(0.1, 0.9),
);

SystemClock.sched(1.5, {
~verb = Synth.new(\verb); //mix up in verb for no click in change of mix
~delay = Synth.new(\delay);
~lfos = Synth.new(\lfos);
	nil; });

SystemClock.sched(1, {
	Pbindef(\Georgia4Bind).play(quant: 4);  //Pbindef allows you to add notes after its playing without doubling up
	nil; });

SystemClock.sched(3, {
	Pbindef(\Georgia3Bind).play(quant: 5);  //Pbindef allows you to add notes after its playing without doubling up
	nil; });

SystemClock.sched(10, {
	Pbindef(\Georgia4Bind,
	\degree, Pseq([0, 3, 9, 7, 11, 12], inf)
);
	nil; });

SystemClock.sched(15, {
	~lfos.set(\freq, 0.1);
	nil; });

SystemClock.sched(20, {
	Pbindef(\Georgia2Bind).play(quant: 4);  //Pbindef allows you to add notes after its playing without doubling up
	nil; });

SystemClock.sched(25, {
	~delay.set(\delay_time, 0.5);
	nil; });


SystemClock.sched(35, {
	Pbindef(\Georgia4Bind,
	\att, 1
);
	nil; });

SystemClock.sched(45, {
	Pbindef(\Georgia3Bind,
	\att, 0.05
);
	nil; });

SystemClock.sched(45, {
	Pbindef(\Georgia3Bind,
	\degree, Prand([0, 2, 5, \rest, 7, 10], inf),
);
	nil; });

SystemClock.sched(35, {
	Pbindef(\Georgia2Bind,
		\delta, Pwhite(0.5, 3),
		\dur, Pwhite(3, 6),
);
	nil; });

SystemClock.sched(55, {
	Pbindef(\Georgia4Bind,
	\degree, Pseq([3, 9, 5, 12], inf),
	\dur, 2,
);
	nil; });

SystemClock.sched(65, {
	Pbindef(\Georgia4Bind).stop;
	x = {
		arg gate = 1;
		var snd;

		snd = BrownNoise.ar(0.05);
		snd = RLPF.ar(snd, SinOsc.ar(0.1).range(100, 600));

		snd = snd * EnvGen.ar(Env.new(releaseNode: 1), gate, doneAction:2);

		Out.ar(0, [snd, snd]);
	}.play;

		nil; });

SystemClock.sched(75, {
	x.set(\gate, 0);
	nil; });


SystemClock.sched(25, {
	~delay.set(\delay_time, 0.2);
	~delay.set(\delay_decay, 10);
	nil; });


	SystemClock.sched(80, {
	Pbindef(\Georgia2Bind,
		\degree, Prand([0, 2, 5, \rest, 7, 10], inf),
		\octave, 3,
		\bright, 0.5,
		\struct, 0.5,
		\damp, 0.5,
		\pos, 0.5,

	);
	nil; });

SystemClock.sched(90, {
	Pbindef(\Georgia3Bind,
		\degree, Pseq([0, 3, 9, 7, 11, 12], inf),
		\decay, Pwhite(4, 8),
		\delta, Pwhite(0.5, 2),
		\octave, 3,
		\amp, 0.6
	);
	nil; });

s.record(numChannels: 24, duration: 120)

)





